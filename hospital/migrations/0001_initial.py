# Generated by Django 5.2 on 2025-07-24 14:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=3, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Counties',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employee_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('role', models.CharField(choices=[('admin', 'System Administrator'), ('medical_superintendent', 'Medical Superintendent'), ('clinical_officer', 'Clinical Officer'), ('medical_officer', 'Medical Officer'), ('consultant', 'Consultant Doctor'), ('registrar', 'Registrar'), ('intern', 'Medical Intern'), ('nurse_manager', 'Nurse Manager'), ('senior_nurse', 'Senior Nurse'), ('registered_nurse', 'Registered Nurse'), ('enrolled_nurse', 'Enrolled Nurse'), ('midwife', 'Midwife'), ('lab_manager', 'Laboratory Manager'), ('lab_technologist', 'Medical Laboratory Technologist'), ('lab_technician', 'Laboratory Technician'), ('pharmacist', 'Pharmacist'), ('pharmaceutical_technologist', 'Pharmaceutical Technologist'), ('radiographer', 'Radiographer'), ('physiotherapist', 'Physiotherapist'), ('nutritionist', 'Nutritionist'), ('social_worker', 'Medical Social Worker'), ('records_officer', 'Medical Records Officer'), ('cashier', 'Hospital Cashier'), ('receptionist', 'Receptionist'), ('security', 'Security Officer'), ('cleaner', 'Hospital Cleaner'), ('driver', 'Ambulance Driver')], max_length=30)),
                ('secondary_role', models.CharField(blank=True, choices=[('admin', 'System Administrator'), ('medical_superintendent', 'Medical Superintendent'), ('clinical_officer', 'Clinical Officer'), ('medical_officer', 'Medical Officer'), ('consultant', 'Consultant Doctor'), ('registrar', 'Registrar'), ('intern', 'Medical Intern'), ('nurse_manager', 'Nurse Manager'), ('senior_nurse', 'Senior Nurse'), ('registered_nurse', 'Registered Nurse'), ('enrolled_nurse', 'Enrolled Nurse'), ('midwife', 'Midwife'), ('lab_manager', 'Laboratory Manager'), ('lab_technologist', 'Medical Laboratory Technologist'), ('lab_technician', 'Laboratory Technician'), ('pharmacist', 'Pharmacist'), ('pharmaceutical_technologist', 'Pharmaceutical Technologist'), ('radiographer', 'Radiographer'), ('physiotherapist', 'Physiotherapist'), ('nutritionist', 'Nutritionist'), ('social_worker', 'Medical Social Worker'), ('records_officer', 'Medical Records Officer'), ('cashier', 'Hospital Cashier'), ('receptionist', 'Receptionist'), ('security', 'Security Officer'), ('cleaner', 'Hospital Cleaner'), ('driver', 'Ambulance Driver')], max_length=30)),
                ('national_id', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\d{7,8}$')])),
                ('phone_primary', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^(\\+254|0)[1-9]\\d{8}$')])),
                ('phone_secondary', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^(\\+254|0)[1-9]\\d{8}$')])),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('county_of_origin', models.CharField(max_length=50)),
                ('sub_county', models.CharField(max_length=50)),
                ('ward', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('next_of_kin_name', models.CharField(max_length=100)),
                ('next_of_kin_relationship', models.CharField(max_length=50)),
                ('next_of_kin_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^(\\+254|0)[1-9]\\d{8}$')])),
                ('employment_status', models.CharField(choices=[('permanent', 'Permanent Employee'), ('contract', 'Contract Employee'), ('locum', 'Locum'), ('intern', 'Intern'), ('volunteer', 'Volunteer'), ('retired', 'Retired'), ('suspended', 'Suspended')], default='permanent', max_length=20)),
                ('employment_date', models.DateField()),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='staff_profiles/')),
                ('kmpdc_license', models.CharField(blank=True, help_text='Kenya Medical Practitioners & Dentists Council License', max_length=50)),
                ('nckenya_license', models.CharField(blank=True, help_text='Nursing Council of Kenya License', max_length=50)),
                ('other_licenses', models.TextField(blank=True, help_text='Other professional licenses')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('appointment_number', models.CharField(max_length=20, unique=True)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('estimated_duration', models.PositiveIntegerField(default=30, help_text='Duration in minutes')),
                ('appointment_type', models.CharField(choices=[('consultation', 'General Consultation'), ('follow_up', 'Follow-up Visit'), ('specialist', 'Specialist Consultation'), ('procedure', 'Minor Procedure'), ('vaccination', 'Vaccination'), ('antenatal', 'Antenatal Visit'), ('family_planning', 'Family Planning'), ('counseling', 'Counseling Session'), ('emergency', 'Emergency Consultation')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('chief_complaint', models.TextField()),
                ('urgency_level', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], default='routine', max_length=20)),
                ('booking_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('confirmed_date', models.DateTimeField(blank=True, null=True)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('consultation_start_time', models.DateTimeField(blank=True, null=True)),
                ('consultation_end_time', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('referral_required', models.BooleanField(default=False)),
                ('consultation_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('partial', 'Partially Paid'), ('paid', 'Fully Paid'), ('waived', 'Fee Waived')], default='pending', max_length=20)),
                ('booked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booked_appointments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar', 'clinical_officer']}, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointments', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('bed_number', models.CharField(max_length=20)),
                ('bed_type', models.CharField(choices=[('standard', 'Standard Bed'), ('electric', 'Electric Bed'), ('icu', 'ICU Bed'), ('isolation', 'Isolation Bed'), ('pediatric', 'Pediatric Bed')], max_length=50)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Under Maintenance'), ('reserved', 'Reserved'), ('isolation', 'Isolation')], default='available', max_length=20)),
                ('last_sanitized', models.DateTimeField(blank=True, null=True)),
                ('equipment_attached', models.TextField(blank=True, help_text='List of equipment attached to this bed')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('admission_number', models.CharField(max_length=20, unique=True)),
                ('admission_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('admission_type', models.CharField(choices=[('emergency', 'Emergency Admission'), ('elective', 'Elective Admission'), ('maternity', 'Maternity Admission'), ('surgical', 'Surgical Admission'), ('medical', 'Medical Admission'), ('pediatric', 'Pediatric Admission'), ('psychiatric', 'Psychiatric Admission'), ('transfer_in', 'Transfer from Another Facility')], max_length=20)),
                ('chief_complaint', models.TextField()),
                ('provisional_diagnosis', models.TextField()),
                ('final_diagnosis', models.TextField(blank=True)),
                ('comorbidities', models.TextField(blank=True)),
                ('referred_from', models.CharField(blank=True, max_length=200)),
                ('referring_doctor', models.CharField(blank=True, max_length=100)),
                ('admission_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('admitted', 'Currently Admitted'), ('discharged', 'Discharged'), ('transferred', 'Transferred'), ('absconded', 'Absconded'), ('died', 'Deceased'), ('referred', 'Referred to Another Facility')], default='admitted', max_length=20)),
                ('discharge_date', models.DateTimeField(blank=True, null=True)),
                ('discharge_type', models.CharField(blank=True, choices=[('normal', 'Normal Discharge'), ('against_advice', 'Against Medical Advice'), ('referred', 'Referred'), ('transferred', 'Transferred'), ('absconded', 'Absconded'), ('died', 'Deceased')], max_length=20)),
                ('discharge_summary', models.TextField(blank=True)),
                ('discharge_instructions', models.TextField(blank=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('referred_to', models.CharField(blank=True, max_length=200)),
                ('total_bill_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('insurance_covered_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('patient_payable_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('assigned_nurse', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['registered_nurse', 'enrolled_nurse', 'senior_nurse']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_admissions', to=settings.AUTH_USER_MODEL)),
                ('consulting_doctors', models.ManyToManyField(blank=True, limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar', 'clinical_officer']}, related_name='consulting_admissions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('primary_doctor', models.ForeignKey(limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar', 'clinical_officer']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_admissions', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('assigned_bed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admissions', to='hospital.bed')),
                ('previous_beds', models.ManyToManyField(blank=True, related_name='previous_admissions', to='hospital.bed')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BedTransfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('transfer_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reason_for_transfer', models.TextField()),
                ('admission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bed_transfers', to='hospital.admission')),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_transfers', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('from_bed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers_from', to='hospital.bed')),
                ('to_bed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_to', to='hospital.bed')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('bill_number', models.CharField(max_length=20, unique=True)),
                ('bill_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('bill_type', models.CharField(choices=[('consultation', 'Consultation Bill'), ('admission', 'Admission Bill'), ('pharmacy', 'Pharmacy Bill'), ('laboratory', 'Laboratory Bill'), ('radiology', 'Radiology Bill'), ('procedure', 'Procedure Bill'), ('comprehensive', 'Comprehensive Bill')], max_length=20)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Payment'), ('partially_paid', 'Partially Paid'), ('fully_paid', 'Fully Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled'), ('waived', 'Fee Waived')], default='pending', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('insurance_claim_number', models.CharField(blank=True, max_length=50)),
                ('insurance_approved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('insurance_paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.admission')),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.appointment')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_bills', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_bills', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('item_code', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('consultation', 'Doctor Consultation'), ('bed_charges', 'Bed Charges'), ('nursing_care', 'Nursing Care'), ('medicine', 'Medicine'), ('laboratory', 'Laboratory Test'), ('radiology', 'Radiology'), ('procedure', 'Medical Procedure'), ('surgery', 'Surgery'), ('therapy', 'Therapy Session'), ('supplies', 'Medical Supplies'), ('ambulance', 'Ambulance Service'), ('other', 'Other Charges')], max_length=20)),
                ('service_date', models.DateField()),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='hospital.bill')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('department_type', models.CharField(choices=[('clinical', 'Clinical Department'), ('diagnostic', 'Diagnostic Department'), ('support', 'Support Department'), ('administrative', 'Administrative Department')], max_length=20)),
                ('description', models.TextField()),
                ('location_building', models.CharField(max_length=50)),
                ('location_floor', models.CharField(max_length=20)),
                ('location_wing', models.CharField(blank=True, max_length=50)),
                ('phone_extension', models.CharField(blank=True, max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('established_date', models.DateField()),
                ('bed_capacity', models.PositiveIntegerField(default=0)),
                ('staff_capacity', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deputy_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departments_deputy_headed', to=settings.AUTH_USER_MODEL)),
                ('head_of_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departments_headed', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='hospital.department'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='referred_to_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referral_appointments', to='hospital.department'),
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('phone_extension', models.CharField(blank=True, max_length=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratories', to='hospital.department')),
                ('lab_manager', models.ForeignKey(limit_choices_to={'role': 'lab_manager'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_labs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('stat', 'STAT (Immediate)')], default='routine', max_length=20)),
                ('status', models.CharField(choices=[('ordered', 'Test Ordered'), ('sample_collected', 'Sample Collected'), ('sample_received', 'Sample Received in Lab'), ('in_progress', 'Analysis in Progress'), ('completed', 'Analysis Completed'), ('verified', 'Results Verified'), ('reported', 'Results Reported'), ('cancelled', 'Order Cancelled'), ('rejected', 'Sample Rejected')], default='ordered', max_length=20)),
                ('clinical_information', models.TextField(blank=True)),
                ('provisional_diagnosis', models.TextField(blank=True)),
                ('sample_collected_date', models.DateTimeField(blank=True, null=True)),
                ('sample_received_date', models.DateTimeField(blank=True, null=True)),
                ('sample_condition', models.TextField(blank=True)),
                ('analysis_start_date', models.DateTimeField(blank=True, null=True)),
                ('analysis_completion_date', models.DateTimeField(blank=True, null=True)),
                ('verified_date', models.DateTimeField(blank=True, null=True)),
                ('reported_date', models.DateTimeField(blank=True, null=True)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.admission')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('ordering_doctor', models.ForeignKey(limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar', 'clinical_officer']}, on_delete=django.db.models.deletion.CASCADE, related_name='ordered_lab_tests', to=settings.AUTH_USER_MODEL)),
                ('sample_collected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collected_samples', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['lab_manager', 'lab_technologist']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_lab_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('test_name', models.CharField(max_length=200)),
                ('test_code', models.CharField(max_length=20, unique=True)),
                ('category', models.CharField(choices=[('hematology', 'Hematology'), ('biochemistry', 'Clinical Biochemistry'), ('microbiology', 'Microbiology'), ('parasitology', 'Parasitology'), ('immunology', 'Immunology'), ('histopathology', 'Histopathology'), ('cytology', 'Cytology'), ('molecular', 'Molecular Biology'), ('endocrinology', 'Endocrinology'), ('toxicology', 'Toxicology')], max_length=20)),
                ('sample_type', models.CharField(choices=[('blood', 'Blood'), ('serum', 'Serum'), ('plasma', 'Plasma'), ('urine', 'Urine'), ('stool', 'Stool'), ('csf', 'Cerebrospinal Fluid'), ('sputum', 'Sputum'), ('swab', 'Swab'), ('tissue', 'Tissue'), ('fluid', 'Body Fluid')], max_length=20)),
                ('sample_volume', models.CharField(blank=True, max_length=50)),
                ('container_type', models.CharField(blank=True, max_length=100)),
                ('special_requirements', models.TextField(blank=True)),
                ('normal_range_male', models.CharField(blank=True, max_length=100)),
                ('normal_range_female', models.CharField(blank=True, max_length=100)),
                ('normal_range_pediatric', models.CharField(blank=True, max_length=100)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('methodology', models.CharField(blank=True, max_length=100)),
                ('turnaround_time', models.PositiveIntegerField(help_text='Hours')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_urgent_available', models.BooleanField(default=True)),
                ('urgent_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fasting_required', models.BooleanField(default=False)),
                ('preparation_instructions', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='hospital.laboratory')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('result_value', models.TextField()),
                ('reference_range', models.CharField(blank=True, max_length=100)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Result Pending'), ('preliminary', 'Preliminary Result'), ('final', 'Final Result'), ('amended', 'Amended Result'), ('cancelled', 'Result Cancelled')], default='pending', max_length=20)),
                ('is_abnormal', models.BooleanField(default=False)),
                ('abnormal_flag', models.CharField(blank=True, help_text='H, L, HH, LL, etc.', max_length=10)),
                ('interpretation', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('analysis_date', models.DateTimeField(blank=True, null=True)),
                ('equipment_used', models.CharField(blank=True, max_length=100)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('analyzed_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['lab_technologist', 'lab_technician']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyzed_results', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('lab_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='hospital.laborder')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['lab_manager', 'lab_technologist']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_results', to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.labtest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('record_number', models.CharField(max_length=20, unique=True)),
                ('record_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('record_type', models.CharField(choices=[('consultation', 'Consultation Record'), ('admission', 'Admission Record'), ('procedure', 'Procedure Record'), ('emergency', 'Emergency Record'), ('discharge', 'Discharge Summary'), ('referral', 'Referral Letter')], max_length=20)),
                ('chief_complaint', models.TextField()),
                ('history_of_presenting_illness', models.TextField()),
                ('past_medical_history', models.TextField(blank=True)),
                ('family_history', models.TextField(blank=True)),
                ('social_history', models.TextField(blank=True)),
                ('drug_history', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('general_appearance', models.TextField(blank=True)),
                ('vital_signs', models.JSONField(blank=True, default=dict)),
                ('systemic_examination', models.TextField(blank=True)),
                ('investigations_ordered', models.TextField(blank=True)),
                ('investigation_results', models.TextField(blank=True)),
                ('provisional_diagnosis', models.TextField()),
                ('differential_diagnosis', models.TextField(blank=True)),
                ('final_diagnosis', models.TextField(blank=True)),
                ('icd_10_codes', models.CharField(blank=True, max_length=200)),
                ('treatment_plan', models.TextField()),
                ('medications_prescribed', models.TextField(blank=True)),
                ('procedures_performed', models.TextField(blank=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('referrals_made', models.TextField(blank=True)),
                ('patient_education', models.TextField(blank=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('access_restrictions', models.TextField(blank=True)),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.admission')),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.appointment')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='hospital.department')),
                ('doctor', models.ForeignKey(limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar', 'clinical_officer']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_medical_records', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='laborder',
            name='medical_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.medicalrecord'),
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(blank=True, max_length=200)),
                ('brand_name', models.CharField(blank=True, max_length=200)),
                ('medicine_code', models.CharField(max_length=50, unique=True)),
                ('dosage_form', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('drops', 'Drops'), ('cream', 'Cream'), ('ointment', 'Ointment'), ('inhaler', 'Inhaler'), ('suppository', 'Suppository'), ('powder', 'Powder')], max_length=20)),
                ('strength', models.CharField(max_length=50)),
                ('therapeutic_class', models.CharField(max_length=100)),
                ('pharmacological_class', models.CharField(blank=True, max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('distributor', models.CharField(blank=True, max_length=100)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
                ('storage_condition', models.CharField(choices=[('room_temp', 'Room Temperature'), ('cool_dry', 'Cool and Dry Place'), ('refrigerated', 'Refrigerated (2-8°C)'), ('frozen', 'Frozen'), ('controlled_substance', 'Controlled Substance Storage')], max_length=30)),
                ('storage_location', models.CharField(blank=True, max_length=100)),
                ('requires_prescription', models.BooleanField(default=True)),
                ('is_controlled_substance', models.BooleanField(default=False)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('markup_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('current_stock', models.PositiveIntegerField(default=0)),
                ('minimum_stock_level', models.PositiveIntegerField(default=10)),
                ('maximum_stock_level', models.PositiveIntegerField(default=1000)),
                ('reorder_level', models.PositiveIntegerField(default=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicineBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('batch_number', models.CharField(max_length=50)),
                ('manufacture_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('quantity_received', models.PositiveIntegerField()),
                ('quantity_remaining', models.PositiveIntegerField()),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('supplier', models.CharField(max_length=100)),
                ('received_date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='hospital.medicine')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('medicine', 'batch_number')},
            },
        ),
        migrations.CreateModel(
            name='MorgueDepartment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(default='Hospital Morgue', max_length=100)),
                ('location_building', models.CharField(max_length=50)),
                ('location_floor', models.CharField(max_length=20)),
                ('capacity', models.PositiveIntegerField()),
                ('current_occupancy', models.PositiveIntegerField(default=0)),
                ('phone_extension', models.CharField(blank=True, max_length=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='morgue_managed', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MorgueCompartment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('compartment_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Under Maintenance'), ('reserved', 'Reserved')], default='available', max_length=20)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('last_sanitized', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('morgue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compartments', to='hospital.morguedepartment')),
            ],
            options={
                'unique_together': {('morgue', 'compartment_number')},
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('patient_number', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('estimated_age', models.PositiveIntegerField(blank=True, help_text='If DOB unknown', null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('I', 'Intersex')], max_length=1)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('separated', 'Separated')], max_length=20)),
                ('national_id', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\d{7,8}$')])),
                ('passport_number', models.CharField(blank=True, max_length=20)),
                ('birth_certificate_number', models.CharField(blank=True, max_length=50)),
                ('phone_primary', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^(\\+254|0)[1-9]\\d{8}$')])),
                ('phone_secondary', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^(\\+254|0)[1-9]\\d{8}$')])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('ward_location', models.CharField(blank=True, max_length=50)),
                ('village', models.CharField(blank=True, max_length=50)),
                ('physical_address', models.TextField(blank=True)),
                ('postal_address', models.CharField(blank=True, max_length=100)),
                ('next_of_kin_name', models.CharField(max_length=100)),
                ('next_of_kin_relationship', models.CharField(max_length=50)),
                ('next_of_kin_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^(\\+254|0)[1-9]\\d{8}$')])),
                ('next_of_kin_id_number', models.CharField(blank=True, max_length=20)),
                ('next_of_kin_address', models.TextField(blank=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('unknown', 'Unknown')], default='unknown', max_length=10)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('chronic_conditions', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('medications', models.TextField(blank=True, help_text='Current medications')),
                ('disabilities', models.TextField(blank=True)),
                ('patient_category', models.CharField(choices=[('general', 'General Patient'), ('nhif', 'NHIF Patient'), ('private', 'Private Patient'), ('corporate', 'Corporate Patient'), ('charity', 'Charity Patient'), ('staff', 'Staff/Dependant'), ('emergency', 'Emergency Patient')], default='general', max_length=20)),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_visit_date', models.DateTimeField(blank=True, null=True)),
                ('is_deceased', models.BooleanField(default=False)),
                ('date_of_death', models.DateTimeField(blank=True, null=True)),
                ('nhif_number', models.CharField(blank=True, max_length=20)),
                ('insurance_provider', models.CharField(blank=True, max_length=100)),
                ('insurance_number', models.CharField(blank=True, max_length=50)),
                ('insurance_expiry_date', models.DateField(blank=True, null=True)),
                ('patient_photo', models.ImageField(blank=True, null=True, upload_to='patient_photos/')),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.county')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MorgueAdmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('morgue_number', models.CharField(max_length=20, unique=True)),
                ('date_of_death', models.DateTimeField()),
                ('time_of_death', models.TimeField()),
                ('place_of_death', models.CharField(max_length=200)),
                ('cause_of_death', models.TextField()),
                ('death_type', models.CharField(choices=[('natural', 'Natural Death'), ('accident', 'Accident'), ('suicide', 'Suicide'), ('homicide', 'Homicide'), ('unknown', 'Unknown'), ('medical', 'Medical Complication')], max_length=20)),
                ('admission_to_morgue_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('body_condition', models.TextField(blank=True)),
                ('personal_effects', models.TextField(blank=True)),
                ('identification_marks', models.TextField(blank=True)),
                ('death_certificate_issued', models.BooleanField(default=False)),
                ('death_certificate_number', models.CharField(blank=True, max_length=50)),
                ('police_case_number', models.CharField(blank=True, max_length=50)),
                ('requires_autopsy', models.BooleanField(default=False)),
                ('autopsy_completed', models.BooleanField(default=False)),
                ('autopsy_report', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('stored', 'Stored in Morgue'), ('released', 'Released to Family'), ('buried', 'Buried (Unclaimed)'), ('transferred', 'Transferred to Another Morgue'), ('autopsy', 'Under Autopsy')], default='stored', max_length=20)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('released_to_name', models.CharField(blank=True, max_length=100)),
                ('released_to_relationship', models.CharField(blank=True, max_length=50)),
                ('released_to_id_number', models.CharField(blank=True, max_length=20)),
                ('released_to_phone', models.CharField(blank=True, max_length=15)),
                ('release_authorization', models.CharField(blank=True, max_length=100)),
                ('morgue_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('autopsy_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('certificate_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('certifying_doctor', models.ForeignKey(limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar']}, on_delete=django.db.models.deletion.CASCADE, related_name='certified_deaths', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('hospital_admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='morgue_admission', to='hospital.admission')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('assigned_compartment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='morgue_admissions', to='hospital.morguecompartment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='morgue_admissions', to='hospital.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='medicalrecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='hospital.patient'),
        ),
        migrations.AddField(
            model_name='laborder',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='hospital.patient'),
        ),
        migrations.AddField(
            model_name='bill',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='hospital.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='hospital.patient'),
        ),
        migrations.AddField(
            model_name='admission',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admissions', to='hospital.patient'),
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('prescription_number', models.CharField(max_length=20, unique=True)),
                ('prescribed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('partially_dispensed', 'Partially Dispensed'), ('fully_dispensed', 'Fully Dispensed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('diagnosis', models.TextField()),
                ('patient_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('allergies_noted', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('dispensing_date', models.DateTimeField(blank=True, null=True)),
                ('dispensing_notes', models.TextField(blank=True)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('insurance_covered', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('patient_pays', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dispensed_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['pharmacist', 'pharmaceutical_technologist']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispensed_prescriptions', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(limit_choices_to={'role__in': ['medical_officer', 'consultant', 'registrar', 'clinical_officer']}, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_prescriptions', to=settings.AUTH_USER_MODEL)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='hospital.medicalrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='hospital.patient')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity_prescribed', models.PositiveIntegerField()),
                ('quantity_dispensed', models.PositiveIntegerField(default=0)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=50)),
                ('route_of_administration', models.CharField(default='Oral', max_length=50)),
                ('special_instructions', models.TextField(blank=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('batch_dispensed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.medicinebatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.medicine')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='hospital.prescription')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_counties', to='hospital.county')),
            ],
            options={
                'verbose_name_plural': 'Sub Counties',
                'unique_together': {('county', 'name')},
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='sub_county',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.subcounty'),
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('recorded_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='°C', max_digits=4, null=True)),
                ('systolic_bp', models.PositiveIntegerField(blank=True, help_text='mmHg', null=True)),
                ('diastolic_bp', models.PositiveIntegerField(blank=True, help_text='mmHg', null=True)),
                ('pulse_rate', models.PositiveIntegerField(blank=True, help_text='beats per minute', null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='breaths per minute', null=True)),
                ('oxygen_saturation', models.PositiveIntegerField(blank=True, help_text='SpO2 %', null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='kg', max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='cm', max_digits=5, null=True)),
                ('blood_sugar', models.DecimalField(blank=True, decimal_places=2, help_text='mmol/L', max_digits=5, null=True)),
                ('pain_score', models.PositiveIntegerField(blank=True, help_text='Pain scale 0-10', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True)),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.admission')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('medical_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.medicalrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='hospital.patient')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_vitals', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('ward_type', models.CharField(choices=[('general_male', 'General Male Ward'), ('general_female', 'General Female Ward'), ('pediatric', 'Pediatric Ward'), ('maternity', 'Maternity Ward'), ('surgical_male', 'Surgical Male Ward'), ('surgical_female', 'Surgical Female Ward'), ('orthopedic', 'Orthopedic Ward'), ('medical', 'Medical Ward'), ('icu', 'Intensive Care Unit'), ('hdu', 'High Dependency Unit'), ('nicu', 'Neonatal ICU'), ('burns', 'Burns Unit'), ('isolation', 'Isolation Ward'), ('psychiatric', 'Psychiatric Ward'), ('private', 'Private Ward'), ('emergency', 'Emergency Ward')], max_length=20)),
                ('location_building', models.CharField(max_length=50)),
                ('location_floor', models.CharField(max_length=20)),
                ('bed_capacity', models.PositiveIntegerField()),
                ('current_occupancy', models.PositiveIntegerField(default=0)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amenities', models.TextField(blank=True)),
                ('visiting_hours', models.CharField(default='2:00 PM - 6:00 PM', max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wards', to='hospital.department')),
                ('nurse_in_charge', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['nurse_manager', 'senior_nurse']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wards_managed', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bed',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beds', to='hospital.ward'),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('doctor', 'appointment_date', 'appointment_time')},
        ),
        migrations.CreateModel(
            name='StaffDepartmentAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=True)),
                ('assignment_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('position_title', models.CharField(blank=True, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_assignments', to='hospital.department')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_assignments', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('staff', 'department', 'is_primary')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='bed',
            unique_together={('ward', 'bed_number')},
        ),
    ]
